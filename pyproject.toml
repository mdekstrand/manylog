[build-system]
requires = ["setuptools>=64", "setuptools_scm>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "manylog"
description = "Collect log messages and progress updates from multiple processes."
authors = [
  { name = "Michael Ekstrand", email = "mdekstrand@drexel.edu" },
]
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Operating System :: OS Independent",
]
requires-python = ">= 3.10"
readme = "README.md"
license = { file = "LICENSE.md" }
dynamic = ["version"]
dependencies = [
  "progress-api>=0.1.0a5",
  "pyzmq",
  "typing-extensions~=4.11",
  "msgpack==1.*",            # p2c: -s msgpack-python==1.*
]

[project.optional-dependencies]
dev = [
  "setuptools>=64",
  "setuptools_scm>=8",
  "build ==1.*",       # p2c: -s python-build==1
  "ruff >= 0.2",
  "pyright",
  "copier ==9.*",
  "unbeheader ~= 1.3", # p2c: -p
  "ipython",
  "pyproject2conda ",
  "sphinx-autobuild",
  "msgpack-types",     # p2c: -p
]
test = [
  "pytest >=7",
  "pytest-cov >=2.12",
  "coverage >=5",
]
doc = [
  "sphinx >=4.2",
  "sphinxext-opengraph >= 0.5",
  "furo",
]

[project.urls]
Documentation = "https://manylog.readthedocs.io/"
GitHub = "https://github.com/lenskit/manylog"

# configure build tools
[tool.setuptools.packages.find]
include = ["manylog"]

[tool.setuptools_scm]
version_scheme = "release-branch-semver"

# settings for generating conda environments for dev & CI, when needed
[tool.pyproject2conda]
channels = ["conda-forge"]
deps = ["just"]

[tool.ruff]
line-length = 100
target-version = "py310"
exclude = [
  ".git",
  "__pycache__",
  "docs/conf.py",
  "build",
  "dist",
]

[tool.ruff.lint]
select = ["E", "F", "I"]

[tool.ruff.lint.isort]
section-order = [
  "future",
  "standard-library",
  "third-party",
  "testing",
  "first-party",
  "local-folder",
]

[tool.ruff.lint.isort.sections]
testing = ["pytest", "hypothesis"]

[tool.mypy]
exclude = "^docs/"

[tool.pyright]
typeCheckingMode = "strict"
exclude = [
  "docs/*",
]
reportMissingImports = true
reportMissingTypeStubs = false
